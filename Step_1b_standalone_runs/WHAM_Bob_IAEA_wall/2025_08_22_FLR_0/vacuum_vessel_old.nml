&vacuum_vessel_config
  description_type = 2  ! 1: MESH, 2: ANALYTIC

  ! if description_type = 1, MESH
  mesh_filename = 'meshfile.msh'

  ! If description_type = 2, ANALYTIC
  num_surfaces_analytic = 3
  surface_padding_epsilon = -1.0e-3
/

&surface_1
  type = 2  ! 1: PLANAR, 2: CYL
  boundary_type = 2  ! 1: RECT, 2: CIRC

  function = 1 ! 1: WALL, 2: PUMP
  origin = 0.0, 0.0, 0.0
  basis = 1.0, 0.0, 0.0,
          0.0, 1.0, 0.0,
          0.0, 0.0, 1.0
  T = 3e-3 ! [keV]
  pabs = 0.7
  pspec = 0.2

  ! PLANAR-RECT (type = 1, PLANAR, boundary_type = 1, RECT)
  xmin = -40
  xmax = +40
  ymin = -40
  ymax = +40

  ! PLANAR-CIRC (type = 1, PLANAR, boundary_type = 2, CIRC)
  origin_xy = 0.0, 0.0
  rmin = 10
  rmax = 40
  circ_tmin = 0.0
  circ_tmax = 360.0

  ! CYL, (type = 2, boundary_type = any)
  R = 40
  zmin = -100
  zmax = +100
  cyl_tmin = 0.0
  cyl_tmax = 360.0

/

&surface_2
  type = 1  ! 1: PLANAR, 2: CYL
  boundary_type = 2  ! 1: RECT, 2: CIRC

  function = 1 ! 1: WALL, 2: PUMP
  origin = 0.0, 0.0, -1.0
  basis = 1.0, 0.0, 0.0,
          0.0, 1.0, 0.0,
          0.0, 0.0, 1.0
  T = 3e-3 ! [keV]
  pabs = 0.8
  pspec = 0.1

  ! PLANAR-RECT (type = 1, PLANAR, boundary_type = 1, RECT)
  xmin = -41
  xmax = +41
  ymin = -41
  ymax = +41

  ! PLANAR-CIRC (type = 1, PLANAR, boundary_type = 2, CIRC)
  origin_xy = 0.0, 0.0
  rmin = 10
  rmax = 41
  circ_tmin = 0.0
  circ_tmax = 360.0

  ! CYL, (type = 2, boundary_type = any)
  R = 40
  zmin = -100
  zmax = +100
  cyl_tmin = 0.0
  cyl_tmax = 360.0
/

&surface_3
  type = 1  ! 1: PLANAR, 2: CYL
  boundary_type = 2  ! 1: RECT, 2: CIRC

  function = 1 ! 1: WALL, 2: PUMP
  origin = 0.0, 0.0, 1.0
  basis = 1.0, 0.0, 0.0,
          0.0, -1.0, 0.0,
          0.0, 0.0, -1.0
  T = 3e-3 ! [keV]
  pabs = 0.8
  pspec = 0.1

  ! PLANAR-RECT (type = 1, PLANAR, boundary_type = 1, RECT)
  xmin = -41
  xmax = +41
  ymin = -41
  ymax = +41

  ! PLANAR-CIRC (type = 1, PLANAR, boundary_type = 2, CIRC)
  origin_xy = 0.0, 0.0
  rmin = 10
  rmax = 41
  circ_tmin = 0.0
  circ_tmax = 360.0

  ! CYL, (type = 2, boundary_type = any)
  R = 40
  zmin = -100
  zmax = +100
  cyl_tmin = 0.0
  cyl_tmax = 360.0
/

!===============================================================================
! Assumptions and conventions for AnalyticSurface definitions:
!
! 1- Local coordinate system:
!    - The local `basis` matrix defines geometry and orientation.
!    - `basis(:,3)` is the outward-pointing normal vector for PLANAR surfaces.
!    - `basis(:,3)` is the cylinder axis for CYL surfaces.
!
!    ➤ This ensures consistent orientation without needing separate axis/normal input.
!
! 2️- Probabilities:
!    - Surface probabilities must satisfy:
!        p_abs + p_spec + p_therm = 1
!    - Only `p_abs` and `p_spec` are specified in input.
!    - `p_therm` is computed internally as:
!        p_therm = 1.0 - (p_abs + p_spec)
!
! 3- Coordinate system for geometry:
!    - All `min`/`max` extents and coordinates (e.g., rmin, rmax, zmin, zmax, etc.)
!      are expressed in the local coordinate system defined by `basis` and `origin`.
!
! 4- Surface type convention:
!    - surface%type = 1 ⇒ PLANAR surface
!    - surface%type = 2 ⇒ CYL surface
!
! 5- Boundary type convention (for PLANAR only):
!    - boundary_type = 1 ⇒ RECT
!    - boundary_type = 2 ⇒ CIRC
!
! 6- All dimensions are in [cm], [keV], [degrees]
!
!===============================================================================
! NOTE ON HANDEDNESS:
!    - The user must provide a **right-handed, orthonormal `basis` matrix**.
!    - If the normal vector direction (`basis(:,3)`) is flipped to face inward
!      (e.g., for end caps), ensure the full `basis` remains right-handed.
!
!===============================================================================
! Future enhancement idea:
!    - Optional input for α, β, γ (Tait–Bryan angles for active Z–Y'–X'' rotation)
!      to compute `basis` automatically inside the reader.
!      ➤ Would improve usability and reduce user error risk.
!===============================================================================
